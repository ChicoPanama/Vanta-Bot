name: CI

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  lint:
    name: Lint and Format
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -e ".[dev]"
    
    - name: Run ruff
      run: ruff check . --fix
    
    - name: Run black
      run: black --check .
    
    - name: Run isort
      run: isort --check-only .
    
    - name: Run mypy
      run: mypy src

  unit-tests:
    name: Unit Tests
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -e ".[dev]"
    
    - name: Run unit tests
      run: pytest tests/unit -v --cov=src --cov-report=xml
    
    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v3
      with:
        file: ./coverage.xml
        flags: unittests
        name: codecov-umbrella

  integration-tests:
    name: Integration Tests
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request'
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -e ".[dev]"
    
    - name: Check if secrets are available
      id: check-secrets
      run: |
        if [ -n "${{ secrets.BASE_RPC_URL }}" ] && [ -n "${{ secrets.TRADER_PRIVATE_KEY }}" ]; then
          echo "secrets-available=true" >> $GITHUB_OUTPUT
        else
          echo "secrets-available=false" >> $GITHUB_OUTPUT
        fi
    
    - name: Run integration tests
      if: steps.check-secrets.outputs.secrets-available == 'true'
      run: pytest -m integration -v
      env:
        BASE_RPC_URL: ${{ secrets.BASE_RPC_URL }}
        TRADER_PRIVATE_KEY: ${{ secrets.TRADER_PRIVATE_KEY }}
        BASE_CHAIN_ID: "8453"
        AVANTIS_TRADING_CONTRACT: "0x44914408af82bC9983bbb330e3578E1105e11d4e"
    
    - name: Skip integration tests
      if: steps.check-secrets.outputs.secrets-available == 'false'
      run: echo "Integration tests skipped - required secrets not configured in repository settings"

  security:
    name: Security Scan
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -e ".[dev]"
        pip install safety bandit
    
    - name: Run safety check
      run: safety check
    
    - name: Run bandit
      run: bandit -r src -f json -o bandit-report.json || true
    
    - name: Upload bandit report
      uses: actions/upload-artifact@v3
      with:
        name: bandit-report
        path: bandit-report.json

  build:
    name: Build Package
    runs-on: ubuntu-latest
    needs: [lint, unit-tests]
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install build twine
    
    - name: Build package
      run: python -m build
    
    - name: Check package
      run: twine check dist/*
    
    - name: Upload build artifacts
      uses: actions/upload-artifact@v3
      with:
        name: dist
        path: dist/