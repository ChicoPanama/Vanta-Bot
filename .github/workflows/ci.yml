name: CI Testing Pipeline

on:
  push:
    branches: [ main, ci-testing-hardening ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.8, 3.9, 3.10, 3.11]

    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
    
    - name: Cache pip dependencies
      uses: actions/cache@v3
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
    
    - name: Run tests with coverage
      env:
        ENVIRONMENT: test
        LOG_JSON: false
        REDIS_URL: redis://localhost:6379
        DATABASE_URL: sqlite:///test.db
        BASE_RPC_URL: https://mainnet.base.org
      run: |
        pytest -q --cov=src --cov-report=term-missing --cov-report=xml --cov-fail-under=90
    
    - name: Run performance tests
      env:
        ENVIRONMENT: test
        LOG_JSON: false
      run: |
        pytest tests/perf/ -v --benchmark-only
    
    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v3
      with:
        file: ./coverage.xml
        flags: unittests
        name: codecov-umbrella
        fail_ci_if_error: false

  lint:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: 3.11
    
    - name: Install linting dependencies
      run: |
        pip install flake8 black isort mypy
    
    - name: Run flake8
      run: flake8 src/ tests/ --count --select=E9,F63,F7,F82 --show-source --statistics
    
    - name: Run black
      run: black --check src/ tests/
    
    - name: Run isort
      run: isort --check-only src/ tests/
    
    - name: Run mypy
      run: mypy src/ --ignore-missing-imports

  security:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: 3.11
    
    - name: Install security tools
      run: |
        pip install bandit safety
    
    - name: Run bandit security scan
      run: bandit -r src/ -f json -o bandit-report.json || true
    
    - name: Run safety check
      run: safety check --json --output safety-report.json || true
