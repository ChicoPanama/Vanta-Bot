[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "avantis-telegram-bot"
version = "2.0.0"
description = "Professional Trading Bot for Avantis Protocol on Base network"
readme = "README.md"
license = {text = "MIT"}
authors = [
    {name = "Vanta Bot Team", email = "support@vanta-bot.com"}
]
classifiers = [
    "Development Status :: 5 - Production/Stable",
    "Intended Audience :: Financial and Insurance Industry",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Topic :: Office/Business :: Financial :: Investment",
    "Topic :: Communications :: Chat",
]
requires-python = ">=3.10"
dependencies = [
    "python-telegram-bot[job-queue]==20.7",
    "python-dotenv==1.0.0",
    "pydantic>=2.5.0,<3",
    "pydantic-settings>=2.1.0,<3",
    "aiosqlite>=0.19.0,<1",
    "web3>=6.0.0,<7.0.0",
    "eth-account>=0.8.0,<1.0.0",
    "eth-typing>=3.0.0,<5.0.0",
    "hexbytes>=0.2.0,<0.4.0",
    "sqlalchemy>=2.0.0,<3.0.0",
    "alembic>=1.10.0,<2.0.0",
    "psycopg2-binary>=2.9.0,<3.0.0",
    "redis>=4.0.0,<6.0.0",
    "cryptography>=40.0.0,<43.0.0",
    "aiohttp>=3.8.0,<4.0.0",
    "requests>=2.25.0,<3.0.0",
    "numpy>=1.21,<2",
    "pandas>=1.3,<2",
    "scikit-learn>=1.0,<2",
    "joblib>=1.4,<1.5",
    "asyncio-throttle>=1.0.2,<1.1",
    "tenacity>=8.3,<9",
    "websockets==12.0",
    "avantis-trader-sdk==0.8.4",
    "loguru>=0.7,<0.8",
    "aioredis>=2.0.1,<3",
    "asyncpg>=0.29.0,<1",
    "fastapi>=0.104.0,<1",
    "uvicorn>=0.24.0,<1",
    "psutil>=5.9.0,<6",
    "sentry-sdk>=1.38.0,<2",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.4.0,<8",
    "pytest-asyncio>=0.21.0,<1",
    "pytest-cov>=4.1.0,<5",
    "black>=23.0.0,<24",
    "isort>=5.12.0,<6",
    "ruff>=0.1.0,<1",
    "mypy>=1.7.0,<2",
    "pre-commit>=3.5.0,<4",
    "bandit>=1.7.0,<2",
    "safety>=2.3.0,<3",
    "detect-secrets>=1.4.0,<2",
    "pytest-benchmark>=4.0.0,<5",
]

[project.urls]
Homepage = "https://github.com/ChicoPanama/Vanta-Bot"
Repository = "https://github.com/ChicoPanama/Vanta-Bot"
Documentation = "https://github.com/ChicoPanama/Vanta-Bot#readme"
"Bug Tracker" = "https://github.com/ChicoPanama/Vanta-Bot/issues"

[project.scripts]
vanta-bot = "main:main"

# Black configuration
[tool.black]
line-length = 100
target-version = ['py310', 'py311']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
  | migrations
)/
'''

# isort configuration
[tool.isort]
profile = "black"
line_length = 100
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
ensure_newline_before_comments = true
src_paths = ["src", "tests", "scripts"]
skip_glob = ["migrations/*"]

# Ruff configuration
[tool.ruff]
target-version = "py310"
line-length = 100
# Add "S" (Bandit rules) + a few helpful families
select = [
    "E","W","F","I","B","C4","UP","ARG","SIM","TCH","TID","Q","RUF","S"
]
ignore = [
    "E501","B008","B006","C901","W191","UP007",
    # Optional: allow assert in tests only (we'll override per-file below)
    "S101",
]
exclude = [
    ".bzr",
    ".direnv",
    ".eggs",
    ".git",
    ".git-rewrite",
    ".hg",
    ".mypy_cache",
    ".nox",
    ".pants.d",
    ".pytype",
    ".ruff_cache",
    ".svn",
    ".tox",
    ".venv",
    "__pypackages__",
    "_build",
    "buck-out",
    "build",
    "dist",
    "node_modules",
    "venv",
    "migrations",
]

[tool.ruff.per-file-ignores]
"__init__.py" = ["F401"]
"tests/*" = ["S101", "ARG", "FBT", "PLR2004"]

# MyPy configuration
[tool.mypy]
python_version = "3.10"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true
show_error_codes = true

# Per-module options
[[tool.mypy.overrides]]
module = [
    "telegram.*",
    "web3.*",
    "eth_account.*",
    "avantis_trader_sdk.*",
    "cryptography.*",
    "redis.*",
    "sqlalchemy.*",
    "alembic.*",
    "pandas.*",
    "numpy.*",
    "sklearn.*",
    "loguru.*",
    "fastapi.*",
    "uvicorn.*",
    "sentry_sdk.*",
]
ignore_missing_imports = true

# Pytest configuration
[tool.pytest.ini_options]
minversion = "7.0"
addopts = "-q -ra --disable-warnings --strict-markers --strict-config"
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
    "unit: marks tests as unit tests",
    "copy_trading: marks tests related to copy trading",
    "avantis_sdk: marks tests related to Avantis SDK",
]
filterwarnings = [
    "ignore::DeprecationWarning",
    "ignore::PendingDeprecationWarning",
    "ignore::UserWarning:sklearn.*",
    "ignore::UserWarning:pandas.*",
]

# Coverage configuration
[tool.coverage.run]
source = ["src"]
omit = [
    "*/tests/*",
    "*/migrations/*",
    "*/__pycache__/*",
    "*/venv/*",
    "*/env/*",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]

# Optional: expose common project scripts for CI & dev parity
[tool.vanta.scripts]
lint = "ruff check . && black --check . && isort --check-only ."
format = "ruff check --fix . && black . && isort ."
types = "mypy --strict src"
security = "bandit -r src -lll -x tests && detect-secrets scan --all-files"
test = "pytest -q"
cov = "pytest -q --cov=src --cov-report=term-missing"
bench = "pytest -q --benchmark-only -m 'not slow and not integration'"

# Bandit configuration
[tool.bandit]
exclude_dirs = ["tests", "migrations"]
skips = ["B101","B601"]
